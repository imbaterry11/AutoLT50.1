setwd("~/GitHub/AutoLT50.1/Raw data processing and feature extraction")
#Functions and cultivars
load('Cultivars.Rdata')
#Functions and cultivars
load('Cultivars.Rdata')
library(dplyr)
library(readr)
library(tidyverse)
library(ggpubr)
library(wesanderson)
library(pracma)
library(data.table)
library(weathermetrics)
library(measurements)
library(naniar)
library(ggplot2)
library(ggpubr)
library(dormancyR)
library(chron)
library(ggrepel)
library(geosphere)
library(chillR)
library(lubridate)
library(caret)
library(fruclimadapt)
setwd("~/GitHub/AutoLT50.1/Raw data processing and feature extraction")
require(dplyr)
require(readr)
require(tidyverse)
require(ggpubr)
require(wesanderson)
require(pracma)
require(data.table)
require(weathermetrics)
require(measurements)
require(naniar)
require(ggplot2)
require(ggpubr)
require(dormancyR)
require(chron)
require(ggrepel)
require(geosphere)
require(chillR)
require(lubridate)
require(caret)
require(fruclimadapt)
setwd("~/GitHub/AutoLT50.1/Raw data processing and feature extraction")
#Load libraries
require(dplyr)
require(readr)
require(tidyverse)
require(ggpubr)
require(wesanderson)
require(pracma)
require(data.table)
require(weathermetrics)
require(measurements)
require(naniar)
require(ggplot2)
require(ggpubr)
require(dormancyR)
require(chron)
require(ggrepel)
require(geosphere)
require(chillR)
require(lubridate)
require(caret)
require(fruclimadapt)
all_data = read_csv('daily_temperature_data_example.csv')
#Load a demo raw temperature file
all_data = read_csv('daily_temperature_data_example.csv')
View(all_data)
all_data$date = mdy(all_data$date)
colnames(all_data)
colnames(all_data)[2,3] = c('Tmax','Tmin')
colnames(all_data)[2:3]
colnames(all_data)[2:3] = c('Tmax','Tmin')
#inverse_EWA is the function to compute REWMA temperatures
inverse_EWA = function(datalist,window=10){
datalist_rev = rev(datalist)
datalist_rev_EWA = movavg(datalist_rev,n = window,type = 'e')
datalist_EWA = rev(datalist_rev_EWA)
datalist_EWA = c(rep(NA,window), datalist_EWA)
datalist_EWA = datalist_EWA[1:length(datalist)]
return(datalist_EWA)
}
df = all_data
